user nginx;
worker_processes auto;
worker_rlimit_nofile 10240;
# Leave this empty for now
events {}

http {
    log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent"';
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream grpc-servers {
        # The docker endpoint of your grpc servers, you can have multiple here
        server grpc-demo-1:8085;
        server grpc-demo-2:8085;
    }

    upstream web-servers {
        server grpc-demo-1:8080;
        server grpc-demo-2:8080;
    }

    server {
        listen 8085 http2;
        # Create a certificate that points to the hostname, e.g. nginx for docker
        # $ openssl req -nodes -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -subj '/CN=nginx'
        # ssl_certificate /run/secrets/nginx.cert;
        # ssl_certificate_key /run/secrets/nginx.key;
        location /com.example.demo.proto {
        # Replace localhost:50051 with the address and port of your gRPC server
        # The 'grpc://' prefix is optional; unencrypted gRPC is the default
            grpc_pass grpc://grpc-servers;
        }

    }

    server {
        listen 8080;

        location / {
            proxy_pass http://web-servers;
        }
    }
}
